name: SonarQube scan

on:
  # Trigger analysis when pushing to your main branches, and when creating a pull request.
  push:
    branches:
      - main
      - 'release/**'
  pull_request:
      types: [opened, synchronize, reopened]
  workflow_call:
    inputs:
      perform-build: 
        required: false
        type: boolean
      build-profile:
        required: false
        type: string
      language: 
        required: false
        type: string
      report-unit-test-coverage: 
        required: false
        type: boolean
      report-to-atlassian-dashboard: 
        required: false
        type: boolean
      quality-product-name:
        required: false
        type: string
      quality-sonar-app-name:
        required: false
        type: string
      quality-testing-type:
        required: false
        type: string
      quality-service-name:
        required: false
        type: string
      quality-junit-report:
        required: false
        type: string
      visibility:
        required: false
        type: string
      udf1:
        required: false
        type: string
      udf2:
        required: false
        type: string
      udf3:
        required: false
        type: string


jobs:
  echo-inputs:
    name: 'Echo inputs'
    runs-on: ubuntu-latest
    steps:
    - name: Echo inputs
      run: |
        echo "Sonarqube scan for PRIVATE repositories, running on ubuntu-latest-4-cores runner"
        echo "Perform build set to ${{ inputs.perform-build }}"
        echo "Build profile set to ${{ inputs.build-profile }}"
        echo "Language set to ${{ inputs.language }} "
        echo "Visibility set to ${{ inputs.visibility }} [ ${{ github.event.repository.visibility }} ]"
        echo "Perform unit test coverage set to ${{ inputs.report-unit-test-coverage }}"
        echo "Report to Atlassian dashboard set to ${{ inputs.report-to-atlassian-dashboard }}"
        echo "Quality product name set to ${{ inputs.quality-product-name }}" 
        echo "Quality sonar application name set to ${{ inputs.quality-sonar-app-name }}"
        echo "Quality testing type set to ${{ inputs.quality-testing-type }}"
        echo "Quality service name set to ${{ inputs.quality-service-name }}"
        echo "Quality JUnit report set to ${{ inputs.quality-junit-report }}"
        echo "Go private modules set to ${{ inputs.go-private-modules }}" 
        
  SonarQube:
    runs-on: ubuntu-latest
    permissions: 
      id-token: write
      contents: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Prepare Secrets and Login into Azure
      id: get-aad-secret
      uses: 'chef/common-github-actions/.github/actions/azure-login@main'
      with:
        akeyless-access-id: '${{ secrets.AKEYLESS_JWT_ID }}'
      
    - name: Add runner IP to Firewall List
      uses: chef/common-github-actions/.github/actions/update-firewall-rule@main
      with:
        action-to-execute: add

    - name: wait
      shell: bash
      run: |
        echo "##[warning]Waiting for 30 seconds to allow the firewall rule to take effect"
        sleep 30

    - name: SonarQube Scan
      if: ${{ inputs.visibility == 'public' }}
      uses: sonarsource/sonarqube-scan-action@v5.1.0
      continue-on-error: true
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: Run SonarQube report generation
      if: ${{ inputs.report-to-atlassian-dashboard == true }}
      uses: Progress-I360/github-action-reporting/sonarqube@main
      with:
        PRODUCT_NAME: ${{ inputs.quality-product-name }}
        SONAR_APP_NAME: ${{ inputs.quality-sonar-app-name }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Run report generation
      if: ${{ inputs.report-to-atlassian-dashboard == true && inputs.report-unit-test-coverage == true }}
      uses: Progress-I360/github-action-reporting/automation@main
      with:
        PRODUCT_NAME: ${{ inputs.quality-product-name }}
        TESTING_TYPE: ${{ inputs.quality-testing-type }}
        SERVICE_NAME: ${{ inputs.quality-service-name }}
        JUNIT_REPORT: ${{ inputs.quality-junit-report }}
        
    - name: Remove Storage Firewall Rule
      if: always()
      uses: chef/common-github-actions/.github/actions/update-firewall-rule@main
      with:
          perform-sonar-build: true
          action-to-execute: remove

    - name: logout
      if: always()
      shell: bash
      run: |
          az logout